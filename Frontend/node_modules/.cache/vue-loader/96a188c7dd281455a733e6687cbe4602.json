{"remainingRequest":"D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\RedMaple\\Frontend\\src\\components\\NgsFormular.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\RedMaple\\Frontend\\src\\components\\NgsFormular.vue","mtime":1547148047000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1541050042000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import {bus} from '../main.js'    \n  import axios from 'axios'\n\n\nexport default{\n\n     created () {\n         bus.$on('editedIndex', (data) =>{\n             this.editedIndex = data;\n         });\n         bus.$on('editedPatient', (data) =>{\n             this.editedPatient = data;\n         });\n         bus.$on('openFormular', (data) =>{\n             this.dialog = data;\n         });\n    },\n    data:() =>({\n        patId:'',\n        editedIndex: -1,\n        dialog: false,\n        editedPatient: {\n        bactNr: '',\n        wiederholung:'',\n        infOldList: '',\n        altId: '',\n        priority:'',\n        pathogen: '',\n        lastName: '',\n        firstName:'',\n        birthdate: '',\n        entry: '',\n        abnahme: '',\n        sender: '',\n        station: '',\n        editing: '',\n        material: '',\n        ngsProject: '',\n        dnaPrepDate: '',\n        dnaKonz: '',\n        dnaVisum: '',\n        runNr: '',\n        ngsNr: '',\n        libType: '',\n        libDate: '',\n        libVisum: '',\n        seqDate: '',\n        ngsMachine: '',\n        qualityVisum: '',\n        pubID: '',\n      },\n      \n    }),\n    methods:{\n              close () {\n        this.dialog = false\n        setTimeout(() => {\n          this.editedPatient = Object.assign({}, this.Patient)\n          this.editedIndex = -1\n        }, 300)\n      },\n      onSubmit(){\n        const newPatient = {\n          firstName: this.editedPatient.firstName,\n          lastName: this.editedPatient.lastName,\n          birthdate:this.editedPatient.birthdate\n        }\n        \n        axios.post('http://147.87.118.201:3000/api/TblPatients', newPatient)\n          .then(ack1 =>{\n            axios.get('http://147.87.118.201:3000/api/TblPatients/findOne?filter={\"where\":{\"and\":[{\"firstName\":\"'+this.editedPatient.firstName+'\"},{\"lastName\":\"'+this.editedPatient.lastName+'\"}]}}')\n            .then(res1 => {\n              console.log(res1)\n              this.patId = res1.data.patientId;\n              const newProbe ={\n                patientId: this.patId,\n                einsender: this.editedPatient.sender,\n                station: this.editedPatient.station,\n                eingangDatum: this.editedPatient.entry,\n                material: this.editedPatient.material\n              } \n            axios.post('http://147.87.118.201:3000/api/TblProbeEingangs', newProbe)\n                .then(ack2 =>{\n                  axios.get('http://147.87.118.201:3000/api/TblProbeEingangs/findOne?filter={\"where\":{\"patientId\":\"'+this.patId+'\"}}')\n                  .then(res2 =>{\n                    console.log(res2)\n                    const newNgs ={\n                      probeId:res2.data.probeId,\n                      bactNr: this.editedPatient.bactNr,\n                      wiederholung: this.editedPatient.wiederholung,\n                      pathogenId: this.editedPatient.pathogen,\n                      publicIdentifier: this.editedPatient.pubID,\n                      priority: this.editedPatient.priority\n                    } \n                    axios.post('http://147.87.118.201:3000/api/TblNgs', newNgs)\n                    .then(ack3=>{\n                      console.log(ack3)\n                    })\n                  })\n                })\n            })\n          })\n          .catch(error => console.log(error))\n          \n        this.close();\n        this.save();\n        },\n      \n      // else statement = wen neuer Pat, if = editedPat. hier muss index und Pat Ã¼bergeben werden.\n      save () {\n        if (this.editedIndex > -1) {\n          bus.$emit('patientHasChanged',this.editedPatient)\n\n         // Object.assign(this.patients[this.editedIndex], this.editedPatient)\n        } else {\n          bus.$emit('newPatientCreated',this.editedPatient)\n\n         // this.patients.push(this.editedPatient)\n        }\n        this.close()\n      }\n    }\n}\n",{"version":3,"sources":["NgsFormular.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"NgsFormular.vue","sourceRoot":"src\\components","sourcesContent":["<template>\n<v-dialog v-model=\"dialog\" max-width=\"1000px\">\n        <v-card>\n          <v-card-title>Dataset Formular </v-card-title>\n\n          <v-card-text>\n            <v-container grid-list-md>\n              <v-layout wrap>\n                    <v-flex> \n                  <v-text-field v-model=\"editedPatient.bactNr\" label=\"Bact Nummer*\" required></v-text-field>\n                </v-flex>\n                <v-flex> \n                  <v-text-field v-model=\"editedPatient.wiederholung\" label=\"Wiederholung*\" required></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.altId\" label=\"alternative ID\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.priority\" label=\"Priority*\" required></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.pathogen\" label=\"Pathogen (g)*\" required></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.lastName\" label=\"lastName*\" required></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.firstName\" label=\"fistName*\" required></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.birthdate\" label=\"Geburtsdatum*\" required></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.entry\" label=\"Eingang*\" required></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.abnahme\" label=\"Abnahme\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.sender\" label=\"Einsender*\" required></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.station\" label=\"Station*\" required></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.editing\" label=\"Bearbeitungsdatum\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.material\" label=\"Material*\" required></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.ngsProject\" label=\"NGS - Projekt\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.dnaPrepDate\" label=\"DNA Vorbereitungsdatum\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.dnaKonz\" label=\"DNA Konzentration\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.dnaVisum\" label=\"DNA Visum\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.runNr\" label=\"Run NR\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.ngsNr\" label=\"NGS Nummer\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.libType\" label=\"Librarytype\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.libDate\" label=\"Library date\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.libVisum\" label=\"Library Visum\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.seqDate\" label=\"Sequenzierungs Datum\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.ngsMachine\" label=\"NGS Maschine\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.qualityVisum\" label=\"QualitÃ¤ts Visum\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.infOldList\" label=\"Information Alteliste\"></v-text-field>\n                </v-flex>\n                <v-flex xs12 sm6 md4>\n                  <v-text-field v-model=\"editedPatient.pubID\" label=\"Public ID*\" required></v-text-field>\n                </v-flex>\n                <v-spacer></v-spacer>\n                <v-card-actions>\n                    <v-btn color=\"blue darken-1\"  @click=\"close\">Cancel</v-btn>\n                    <v-btn color=\"blue darken-1\"  @click=\"onSubmit\">Save</v-btn>\n                </v-card-actions>\n              </v-layout>\n            </v-container>\n          </v-card-text>\n\n        </v-card>\n      </v-dialog>\n</template>\n\n<script>\n  import {bus} from '../main.js'    \n  import axios from 'axios'\n\n\nexport default{\n\n     created () {\n         bus.$on('editedIndex', (data) =>{\n             this.editedIndex = data;\n         });\n         bus.$on('editedPatient', (data) =>{\n             this.editedPatient = data;\n         });\n         bus.$on('openFormular', (data) =>{\n             this.dialog = data;\n         });\n    },\n    data:() =>({\n        patId:'',\n        editedIndex: -1,\n        dialog: false,\n        editedPatient: {\n        bactNr: '',\n        wiederholung:'',\n        infOldList: '',\n        altId: '',\n        priority:'',\n        pathogen: '',\n        lastName: '',\n        firstName:'',\n        birthdate: '',\n        entry: '',\n        abnahme: '',\n        sender: '',\n        station: '',\n        editing: '',\n        material: '',\n        ngsProject: '',\n        dnaPrepDate: '',\n        dnaKonz: '',\n        dnaVisum: '',\n        runNr: '',\n        ngsNr: '',\n        libType: '',\n        libDate: '',\n        libVisum: '',\n        seqDate: '',\n        ngsMachine: '',\n        qualityVisum: '',\n        pubID: '',\n      },\n      \n    }),\n    methods:{\n              close () {\n        this.dialog = false\n        setTimeout(() => {\n          this.editedPatient = Object.assign({}, this.Patient)\n          this.editedIndex = -1\n        }, 300)\n      },\n      onSubmit(){\n        const newPatient = {\n          firstName: this.editedPatient.firstName,\n          lastName: this.editedPatient.lastName,\n          birthdate:this.editedPatient.birthdate\n        }\n        \n        axios.post('http://147.87.118.201:3000/api/TblPatients', newPatient)\n          .then(ack1 =>{\n            axios.get('http://147.87.118.201:3000/api/TblPatients/findOne?filter={\"where\":{\"and\":[{\"firstName\":\"'+this.editedPatient.firstName+'\"},{\"lastName\":\"'+this.editedPatient.lastName+'\"}]}}')\n            .then(res1 => {\n              console.log(res1)\n              this.patId = res1.data.patientId;\n              const newProbe ={\n                patientId: this.patId,\n                einsender: this.editedPatient.sender,\n                station: this.editedPatient.station,\n                eingangDatum: this.editedPatient.entry,\n                material: this.editedPatient.material\n              } \n            axios.post('http://147.87.118.201:3000/api/TblProbeEingangs', newProbe)\n                .then(ack2 =>{\n                  axios.get('http://147.87.118.201:3000/api/TblProbeEingangs/findOne?filter={\"where\":{\"patientId\":\"'+this.patId+'\"}}')\n                  .then(res2 =>{\n                    console.log(res2)\n                    const newNgs ={\n                      probeId:res2.data.probeId,\n                      bactNr: this.editedPatient.bactNr,\n                      wiederholung: this.editedPatient.wiederholung,\n                      pathogenId: this.editedPatient.pathogen,\n                      publicIdentifier: this.editedPatient.pubID,\n                      priority: this.editedPatient.priority\n                    } \n                    axios.post('http://147.87.118.201:3000/api/TblNgs', newNgs)\n                    .then(ack3=>{\n                      console.log(ack3)\n                    })\n                  })\n                })\n            })\n          })\n          .catch(error => console.log(error))\n          \n        this.close();\n        this.save();\n        },\n      \n      // else statement = wen neuer Pat, if = editedPat. hier muss index und Pat Ã¼bergeben werden.\n      save () {\n        if (this.editedIndex > -1) {\n          bus.$emit('patientHasChanged',this.editedPatient)\n\n         // Object.assign(this.patients[this.editedIndex], this.editedPatient)\n        } else {\n          bus.$emit('newPatientCreated',this.editedPatient)\n\n         // this.patients.push(this.editedPatient)\n        }\n        this.close()\n      }\n    }\n}\n</script>"]}]}