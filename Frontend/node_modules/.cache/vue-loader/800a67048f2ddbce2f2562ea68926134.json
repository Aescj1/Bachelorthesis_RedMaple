{"remainingRequest":"D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\RedMaple\\Frontend\\node_modules\\vuetify-loader\\lib\\loader.js!D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\RedMaple\\Frontend\\src\\components\\TableDate.vue?vue&type=template&id=63b15ac8&","dependencies":[{"path":"D:\\RedMaple\\Frontend\\src\\components\\TableDate.vue","mtime":1547148047000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1541050042000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"v-data-table\", {\n    staticClass: \"elevation-1\",\n    attrs: {\n      headers: _vm.renderHeader(),\n      items: _vm.patients,\n      \"item-key\": \"bactNr\",\n      search: _vm.search,\n      \"must-sort\": \"\",\n      pagination: _vm.pagination\n    },\n    on: {\n      \"update:pagination\": function($event) {\n        _vm.pagination = $event\n      }\n    },\n    scopedSlots: _vm._u([\n      {\n        key: \"items\",\n        fn: function(props) {\n          return [\n            _c(\n              \"tr\",\n              {\n                on: {\n                  click: function($event) {\n                    props.expanded = !props.expanded\n                  }\n                }\n              },\n              [\n                _c(\n                  \"td\",\n                  { staticClass: \"justify-center layout px-0\" },\n                  [\n                    _c(\n                      \"v-icon\",\n                      {\n                        staticClass: \"mr-2\",\n                        attrs: { small: \"\" },\n                        on: {\n                          click: function($event) {\n                            _vm.editItem(props.item)\n                          }\n                        }\n                      },\n                      [_vm._v(\"\\n            edit\\n          \")]\n                    ),\n                    _c(\n                      \"v-icon\",\n                      {\n                        attrs: { small: \"\" },\n                        on: {\n                          click: function($event) {\n                            _vm.deleteItem(props.item)\n                          }\n                        }\n                      },\n                      [_vm._v(\"\\n            delete\\n          \")]\n                    )\n                  ],\n                  1\n                ),\n                !_vm.headers[1].hide\n                  ? _c(\n                      \"td\",\n                      { staticClass: \"text-xs-left\" },\n                      [\n                        _c(\n                          \"v-edit-dialog\",\n                          {\n                            attrs: {\n                              \"return-value\": props.item.bactNr,\n                              lazy: \"\"\n                            },\n                            on: {\n                              \"update:returnValue\": function($event) {\n                                _vm.$set(props.item, \"bactNr\", $event)\n                              },\n                              save: _vm.save,\n                              cancel: _vm.cancel,\n                              open: _vm.open,\n                              close: _vm.close\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \" \" +\n                                _vm._s(props.item.bactNr) +\n                                \"\\n                      \"\n                            ),\n                            _c(\"v-text-field\", {\n                              attrs: {\n                                slot: \"input\",\n                                label: \"Edit\",\n                                \"single-line\": \"\",\n                                counter: \"\"\n                              },\n                              slot: \"input\",\n                              model: {\n                                value: props.item.bactNr,\n                                callback: function($$v) {\n                                  _vm.$set(props.item, \"bactNr\", $$v)\n                                },\n                                expression: \"props.item.bactNr\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                !_vm.headers[2].hide\n                  ? _c(\n                      \"td\",\n                      { staticClass: \"text-xs-center\" },\n                      [\n                        _c(\n                          \"v-edit-dialog\",\n                          {\n                            attrs: {\n                              \"return-value\": props.item.altId,\n                              lazy: \"\"\n                            },\n                            on: {\n                              \"update:returnValue\": function($event) {\n                                _vm.$set(props.item, \"altId\", $event)\n                              },\n                              save: _vm.save,\n                              cancel: _vm.cancel,\n                              open: _vm.open,\n                              close: _vm.close\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(props.item.altId) +\n                                \"\\n                      \"\n                            ),\n                            _c(\"v-text-field\", {\n                              attrs: {\n                                slot: \"input\",\n                                label: \"Edit\",\n                                \"single-line\": \"\",\n                                counter: \"\"\n                              },\n                              slot: \"input\",\n                              model: {\n                                value: props.item.altId,\n                                callback: function($$v) {\n                                  _vm.$set(props.item, \"altId\", $$v)\n                                },\n                                expression: \"props.item.altId\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                !_vm.headers[3].hide\n                  ? _c(\n                      \"td\",\n                      { staticClass: \"text-xs-center\" },\n                      [\n                        _c(\n                          \"v-edit-dialog\",\n                          {\n                            attrs: {\n                              \"return-value\": props.item.priority,\n                              lazy: \"\"\n                            },\n                            on: {\n                              \"update:returnValue\": function($event) {\n                                _vm.$set(props.item, \"priority\", $event)\n                              },\n                              save: _vm.save,\n                              cancel: _vm.cancel,\n                              open: _vm.open,\n                              close: _vm.close\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(props.item.priority) +\n                                \"\\n                      \"\n                            ),\n                            _c(\"v-text-field\", {\n                              attrs: {\n                                slot: \"input\",\n                                label: \"Edit\",\n                                \"single-line\": \"\",\n                                counter: \"\"\n                              },\n                              slot: \"input\",\n                              model: {\n                                value: props.item.priority,\n                                callback: function($$v) {\n                                  _vm.$set(props.item, \"priority\", $$v)\n                                },\n                                expression: \"props.item.priority\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                !_vm.headers[4].hide\n                  ? _c(\n                      \"td\",\n                      { staticClass: \"text-xs-center\" },\n                      [\n                        _c(\n                          \"v-edit-dialog\",\n                          {\n                            attrs: {\n                              \"return-value\": props.item.abbreviation,\n                              lazy: \"\"\n                            },\n                            on: {\n                              \"update:returnValue\": function($event) {\n                                _vm.$set(props.item, \"abbreviation\", $event)\n                              },\n                              save: _vm.save,\n                              cancel: _vm.cancel,\n                              open: _vm.open,\n                              close: _vm.close\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(props.item.abbreviation) +\n                                \"\\n                      \"\n                            ),\n                            _c(\"v-text-field\", {\n                              attrs: {\n                                slot: \"input\",\n                                label: \"Edit\",\n                                \"single-line\": \"\",\n                                counter: \"\"\n                              },\n                              slot: \"input\",\n                              model: {\n                                value: props.item.abbreviation,\n                                callback: function($$v) {\n                                  _vm.$set(props.item, \"abbreviation\", $$v)\n                                },\n                                expression: \"props.item.abbreviation\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                !_vm.headers[5].hide\n                  ? _c(\n                      \"td\",\n                      { staticClass: \"text-xs-center\" },\n                      [\n                        _c(\n                          \"v-edit-dialog\",\n                          {\n                            attrs: {\n                              \"return-value\": props.item.lastName,\n                              lazy: \"\"\n                            },\n                            on: {\n                              \"update:returnValue\": function($event) {\n                                _vm.$set(props.item, \"lastName\", $event)\n                              },\n                              save: _vm.save,\n                              cancel: _vm.cancel,\n                              open: _vm.open,\n                              close: _vm.close\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(props.item.lastName) +\n                                \"\\n              \"\n                            ),\n                            _c(\"v-text-field\", {\n                              attrs: {\n                                slot: \"input\",\n                                label: \"Edit\",\n                                \"single-line\": \"\",\n                                counter: \"\"\n                              },\n                              slot: \"input\",\n                              model: {\n                                value: props.item.lastName,\n                                callback: function($$v) {\n                                  _vm.$set(props.item, \"lastName\", $$v)\n                                },\n                                expression: \"props.item.lastName\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                !_vm.headers[6].hide\n                  ? _c(\n                      \"td\",\n                      { staticClass: \"text-xs-center\" },\n                      [\n                        _c(\n                          \"v-edit-dialog\",\n                          {\n                            attrs: {\n                              \"return-value\": props.item.birthdate,\n                              lazy: \"\"\n                            },\n                            on: {\n                              \"update:returnValue\": function($event) {\n                                _vm.$set(props.item, \"birthdate\", $event)\n                              },\n                              save: _vm.save,\n                              cancel: _vm.cancel,\n                              open: _vm.open,\n                              close: _vm.close\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n          \" +\n                                _vm._s(props.item.birthdate) +\n                                \"\\n              \"\n                            ),\n                            _c(\"v-text-field\", {\n                              attrs: {\n                                slot: \"input\",\n                                label: \"Edit\",\n                                \"single-line\": \"\",\n                                counter: \"\"\n                              },\n                              slot: \"input\",\n                              model: {\n                                value: props.item.birthdate,\n                                callback: function($$v) {\n                                  _vm.$set(props.item, \"birthdate\", $$v)\n                                },\n                                expression: \"props.item.birthdate\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                !_vm.headers[7].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.entry))\n                    ])\n                  : _vm._e(),\n                !_vm.headers[8].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.abnahmeDatum))\n                    ])\n                  : _vm._e(),\n                !_vm.headers[9].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.einsender))\n                    ])\n                  : _vm._e(),\n                !_vm.headers[10].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.station))\n                    ])\n                  : _vm._e(),\n                !_vm.headers[11].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.bearbeitung))\n                    ])\n                  : _vm._e(),\n                !_vm.headers[12].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.material))\n                    ])\n                  : _vm._e(),\n                !_vm.headers[13].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.ngsProject))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 2 && !_vm.headers[14].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.datumPrep))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 2 && !_vm.headers[15].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.konzentration))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 2 && !_vm.headers[16].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.visumDna))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 0 && !_vm.headers[17].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.runNr))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 0 && !_vm.headers[18].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.runProbeNr))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 0 && !_vm.headers[19].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.libraryTyp))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 0 && !_vm.headers[20].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.libraryDatum))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 0 && !_vm.headers[21].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.libraryVisum))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 0 && !_vm.headers[22].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.seqDatum))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 0 && !_vm.headers[23].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.modalität))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 0 && !_vm.headers[24].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.seqVisum))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 0 && !_vm.headers[25].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.datenqualVisum))\n                    ])\n                  : _vm._e(),\n                _vm.state <= 0 && !_vm.headers[26].hide\n                  ? _c(\"td\", { staticClass: \"text-xs-center\" }, [\n                      _vm._v(_vm._s(props.item.publicIdentifier))\n                    ])\n                  : _vm._e()\n              ]\n            )\n          ]\n        }\n      },\n      {\n        key: \"expand\",\n        fn: function(props) {\n          return [\n            _c(\n              \"v-card\",\n              { staticClass: \"text-xs-center\", attrs: { flat: \"\" } },\n              [\n                _c(\n                  \"v-card-text\",\n                  { staticStyle: { \"background-color\": \"grey\" } },\n                  [\n                    _c(\"b\", [_vm._v(\"Current BactNr.: \")]),\n                    _vm._v(_vm._s(props.item.bactNr) + \" \"),\n                    _c(\"b\", [_vm._v(\"| Current NGS Project:\")]),\n                    _vm._v(\" \" + _vm._s(props.item.ngsProject))\n                  ]\n                )\n              ],\n              1\n            )\n          ]\n        }\n      }\n    ])\n  })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}