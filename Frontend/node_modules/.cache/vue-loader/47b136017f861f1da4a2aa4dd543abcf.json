{"remainingRequest":"D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\RedMaple\\Frontend\\src\\components\\TableDate.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\RedMaple\\Frontend\\src\\components\\TableDate.vue","mtime":1547148047000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1541050042000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.dataSet{\n  max-height: 50px;\n  min-width: 130px;\n}\n",{"version":3,"sources":["TableDate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuYA;AACA;AACA;AACA","file":"TableDate.vue","sourceRoot":"src\\components","sourcesContent":["<template>\n  <v-data-table\n    :headers=\"renderHeader()\"\n    :items=\"patients\"\n    class=\"elevation-1\"\n    item-key=\"bactNr\"\n    :search=\"search\"\n    must-sort\n    v-bind:pagination.sync=\"pagination\"\n\n\n\n  >\n<template slot=\"items\" slot-scope=\"props\">\n   <tr @click=\"props.expanded = !props.expanded\">\n        <!--The v-if statements checks the state for the tabs and sets the information accordingly !-->\n                <td class=\"justify-center layout px-0\" >\n          <v-icon\n            small\n            class=\"mr-2\"\n            @click=\"editItem(props.item)\"\n          >\n            edit\n          </v-icon>\n          <v-icon\n            small\n            @click=\"deleteItem(props.item)\"\n          >\n            delete\n          </v-icon>\n        </td>\n        <td class=\"text-xs-left\" v-if=\"!headers[1].hide\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.bactNr\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          > {{ props.item.bactNr }}\n                      <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.bactNr\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog>\n        </td> \n        <td v-if=\"!headers[2].hide\" class=\"text-xs-center\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.altId\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          >\n          {{ props.item.altId }}\n                      <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.altId\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog>\n          </td>\n        <td v-if=\"!headers[3].hide\" class=\"text-xs-center\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.priority\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          >\n          {{ props.item.priority }}\n                      <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.priority\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog> \n          </td>\n\n        <td v-if=\"!headers[4].hide\" class=\"text-xs-center\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.abbreviation\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          >\n          {{ props.item.abbreviation }}\n                      <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.abbreviation\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog>\n          </td>\n\n        <td v-if=\"!headers[5].hide\" class=\"text-xs-center\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.lastName\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          >\n          {{ props.item.lastName }}\n              <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.lastName\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog>\n          </td>\n        <td v-if=\"!headers[6].hide\" class=\"text-xs-center\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.birthdate\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          >\n          {{ props.item.birthdate }}\n              <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.birthdate\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog>\n          </td>\n        <td v-if=\"!headers[7].hide\" class=\"text-xs-center\">{{ props.item.entry }}</td>\n        <td v-if=\"!headers[8].hide\" class=\"text-xs-center\">{{ props.item.abnahmeDatum }}</td>\n        <td v-if=\"!headers[9].hide\" class=\"text-xs-center\">{{ props.item.einsender }}</td>\n        <td v-if=\"!headers[10].hide\" class=\"text-xs-center\">{{ props.item.station }}</td>\n        <td v-if=\"!headers[11].hide\" class=\"text-xs-center\">{{ props.item.bearbeitung }}</td>\n        <td v-if=\"!headers[12].hide\" class=\"text-xs-center\">{{ props.item.material }}</td>\n        <td v-if=\"!headers[13].hide\" class=\"text-xs-center\">{{ props.item.ngsProject }}</td>\n        <td v-if=\"(state<=2) && (!headers[14].hide)\" class=\"text-xs-center\">{{ props.item.datumPrep }}</td>\n        <td v-if=\"(state<=2) && (!headers[15].hide)\" class=\"text-xs-center\">{{ props.item.konzentration }}</td>\n        <td v-if=\"(state<=2) && (!headers[16].hide)\" class=\"text-xs-center\">{{ props.item.visumDna }}</td>\n        <td v-if=\"(state<=0) && (!headers[17].hide)\" class=\"text-xs-center\">{{ props.item.runNr }}</td>\n        <td v-if=\"(state<=0) && (!headers[18].hide)\" class=\"text-xs-center\">{{ props.item.runProbeNr }}</td>\n        <td v-if=\"(state<=0) && (!headers[19].hide)\" class=\"text-xs-center\">{{ props.item.libraryTyp }}</td>\n        <td v-if=\"(state<=0) && (!headers[20].hide)\" class=\"text-xs-center\">{{ props.item.libraryDatum }}</td>\n        <td v-if=\"(state<=0) && (!headers[21].hide)\" class=\"text-xs-center\">{{ props.item.libraryVisum }}</td>\n        <td v-if=\"(state<=0) && (!headers[22].hide)\" class=\"text-xs-center\">{{ props.item.seqDatum }}</td>\n        <td v-if=\"(state<=0) && (!headers[23].hide)\" class=\"text-xs-center\">{{ props.item.modalit√§t }}</td>\n        <td v-if=\"(state<=0) && (!headers[24].hide)\" class=\"text-xs-center\">{{ props.item.seqVisum }}</td>\n        <td v-if=\"(state<=0) && (!headers[25].hide)\" class=\"text-xs-center\">{{ props.item.datenqualVisum }}</td>\n        <td v-if=\"(state<=0) && (!headers[26].hide)\" class=\"text-xs-center\">{{ props.item.publicIdentifier }}</td>\n\n      </tr>\n      </template>\n      <template slot=\"expand\" slot-scope=\"props\">\n      <v-card class=\"text-xs-center\" flat>\n        <v-card-text  style=\"background-color:grey\"><b>Current BactNr.: </b>{{props.item.bactNr}} <b>| Current NGS Project:</b> {{props.item.ngsProject}}</v-card-text>\n      </v-card>\n    </template>\n  </v-data-table>\n</template>\n\n<script>\nimport {bus} from '../main.js';\nimport axios from 'axios';\n\n  export default {\n    props:{\n      state:Number\n    },\n    data: () => ({\n      bufferresults:\"\",\n      pagination : {'sortBy': 'priority', 'ascending': true, 'rowsPerPage': 10},\n      headerindex:0,\n      headers: [\n        { property: 3, text: ' Actions ', value: '' , sortable:false, hide: false},\n        { class:'dataSet',property: 3, text: 'Bact Nr-', sortable: true, value: 'bactNr', hide: false},\n        { property: 3, text: 'Alternative ID', value: 'altId', hide: false },\n        { property: 3,text: 'priority', value: 'priority' , hide: false},\n        { property: 3,text: 'Pathogen', value: 'abbreviation' , hide: false},\n        { class:'dataSet',property: 3,text: 'Patient', value: 'lastName' , hide: false},\n        { property: 3,text: 'Geburtsdatum', value: 'birthdate', hide: false },\n        { property: 3,text: 'Eingang', value: 'entry', sortable: false, hide: false },\n        { property: 3,text: 'abnahmeDatum', value: 'abnahmeDatum', hide: false },\n        { property: 3,text: 'Einsender', value: 'einsender', hide: false },\n        { property: 3,text: 'Station', value: 'station', hide: false },\n        { property: 3,text: 'Bearbeitung', value: 'bearbeitung', hide: false },\n        { property: 3,text: 'Material', value: 'material', hide: false },\n        { property: 3,text: 'NGS-Projekt', value: 'ngsProject', hide: false },\n        { property: 2,text: 'Datum DNA-Prep', value: 'datumPrep', hide: false },\n        { property: 2,text: 'DNA-Konz (ng/ul)', value: 'konzentration', hide: false },\n        { property: 2,text: 'Visum DNA', value: 'visumDna', hide: false },\n        { property: 0,text: 'Run Nummer', value: 'runNr', hide: false },\n        { property: 0,text: 'NGS Nummer', value: 'runProbeNr', hide: false },\n        { property: 0,text: 'Library Typ', value: 'libraryTyp', hide: false },\n        { property: 0,text: 'Datum Library', value: 'libraryDatum', hide: false },\n        { property: 0,text: 'Visum Library', value: 'libraryVisum', hide: false },\n        { property: 0,text: 'Datum Sequenzierung', value: 'seqDatum', hide: false },\n        { property: 0,text: 'NGS Ger√§t', value: 'modalit√§t' , hide: false},\n        { property: 0,text: 'Visum Datenqualit√§t', value: 'datenqualVisum' , hide: false},\n        { property: 0,text: 'Information alte Liste', value: 'infOldList' , hide: false},\n        { property: 0,text: 'Public identifier', value: 'publicIdentifier' , hide: false},\n      ],\n      search:'',\n      tabs: null,\n    patients: [],\n      editedIndex: -1,\n      editedPatient: {\n        bactNr: '',\n        infOldList: '',\n        altId: '',\n        priority:'',\n        abbreviation: '',\n        lastName: '',\n        firstName:'',\n        patName: '',\n        birthdate: '',\n        entry: '',\n        abnahmeDatum: '',\n        einsender: '',\n        station: '',\n        bearbeitung: '',\n        material: '',\n        ngsProject: '',\n        datumPrep: '',\n        konzentration: '',\n        visumDna: '',\n        runNr: '',\n        runProbeNr: '',\n        libraryTyp: '',\n        libraryDatum: '',\n        libraryVisum: '',\n        seqDatum: '',\n        modalit√§t: '',\n        datenqualVisum: '',\n        publicIdentifier: '',\n      },\n       defaultPatient: {\n        bactNr: '',\n        infOldList: '',\n        altId: '',\n        priority:'',\n        abbreviation: '',\n        lastName: '',\n        firstName:'',\n        birthdate: '',\n        entry: '',\n        abnahmeDatum: '',\n        einsender: '',\n        station: '',\n        bearbeitung: '',\n        material: '',\n        ngsProject: '',\n        datumPrep: '',\n        konzentration: '',\n        visumDna: '',\n        runNr: '',\n        runProbeNr: '',\n        libraryTyp: '',\n        libraryDatum: '',\n        libraryVisum: '',\n        seqDatum: '',\n        modalit√§t: '',\n        seqVisum:'',\n        datenqualVisum: '',\n        publicIdentifier: '',\n      }\n    }),\n       computed: {\n      formTitle () {\n        return this.editedIndex === -1 ? 'New Item' : 'Edit Item'\n      },\n      pages () {\n        if (this.pagination.rowsPerPage == null ||\n          this.pagination.totalItems == null\n        ) return 0\n\n        return Math.ceil(this.pagination.totalItems / this.pagination.rowsPerPage)\n      }\n    }, \n\n    created () {\n            this.initialize()\n      bus.$on('newPatientCreated', (data) =>{\n      this.editedPatient = data;\n      this.patients.push(this.editedPatient)\n      \n      });\n      bus.$on('patientHasChanged', (data) =>{\n      this.editedPatient = data;\n\n      });\n      bus.$on('editedIndex', (data) =>{\n      this.editedIndex = data;\n      this.patients.splice(this.editedIndex,1,this.editedPatient)\n      });\n      bus.$on('searchChanged', (data) =>{\n      this.search = data;\n      });\n      bus.$on('hideHeader', (data) =>{\n      this.headerindex = data;\n      this.headers[this.headerindex].hide = !this.headers[this.headerindex].hide\n      });\n    },\n\n\n    methods: {\n      initialize () {\n        axios.get(\n        \"http://147.87.118.201:3000/api/TblDnaSeqs?filter={%22include%22:{%22toDnaExtraction%22:[{%22toNgs%22:[{%22toPathogen%22:[{%22toNgs%22:[{%22toProbeEingang%22:[{%22toPatient%22:%22%22}]}]}]}]}]}}\"\n        )\n          .then(res => {\n            console.log(res);\n            const data = res.data; \n           for(let i in data){\n              const dnaSeq = res.data[i];\n              const dnaExtraction = dnaSeq.toDnaExtraction;\n              const ngs = dnaExtraction.toNgs;\n              let pathogen = ngs.toPathogen;\n              let probeEingang = pathogen.toNgs[0].toProbeEingang;\n              let patient = probeEingang.toPatient;\n\n              this.editedPatient = Object.assign({},dnaSeq,dnaExtraction,ngs,pathogen,probeEingang,patient)\n               console.log(this.editedPatient);\n              this.patients.push(this.editedPatient);\n            }\n          })\n          .catch(error => console.log(error))\n      },\n          editItem (item) {\n        //urspr√ºnglicher Code der den PatID mitgibt!\n        this.editedIndex = this.patients.indexOf(item)\n        this.editedPatient = Object.assign({}, item)\n\n        bus.$emit('openFormular', true) // emit the event to the bus\n        bus.$emit('editedIndex', this.editedIndex)\n        bus.$emit('editedPatient',this.editedPatient)\n\n      },\n\n\n      deleteItem (item) {\n        const index = this.patients.indexOf(item)\n        confirm('Are you sure you want to delete this dataset?') && this.patients.splice(index, 1)\n      },\n\n      /*This method grabs all the headers in header[] and checks its property, compares it with\n      the state from the tab (which get provided by the Tableframe) and sets the tableheaders\n      accordingly */\n      renderHeader(){\n        return this.headers.filter(h => (h.property>= this.state)).filter(h => h.hide == false)\n      },\n\n      save () {\n        this.snack = true\n        this.snackColor = 'success'\n        this.snackText = 'Data saved'\n      },\n      cancel () {\n        this.snack = true\n        this.snackColor = 'error'\n        this.snackText = 'Canceled'\n      },\n      open () {\n        this.snack = true\n        this.snackColor = 'info'\n        this.snackText = 'Dialog opened'\n      },\n      close () {\n        console.log('Dialog closed')\n      }\n    }\n  }\n  </script>\n\n<style>\n.dataSet{\n  max-height: 50px;\n  min-width: 130px;\n}\n</style>\n"]}]}