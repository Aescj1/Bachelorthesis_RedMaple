{"remainingRequest":"D:\\RedMaple\\Frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\RedMaple\\Frontend\\node_modules\\vuetify-loader\\lib\\loader.js!D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\RedMaple\\Frontend\\src\\components\\TableDate.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\RedMaple\\Frontend\\src\\components\\TableDate.vue","mtime":1547148047000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1541050042000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { bus } from '../main.js';\nimport axios from 'axios';\nexport default {\n  props: {\n    state: Number\n  },\n  data: function data() {\n    return {\n      bufferresults: \"\",\n      pagination: {\n        'sortBy': 'priority',\n        'ascending': true,\n        'rowsPerPage': 10\n      },\n      headerindex: 0,\n      headers: [{\n        property: 3,\n        text: ' Actions ',\n        value: '',\n        sortable: false,\n        hide: false\n      }, {\n        class: 'dataSet',\n        property: 3,\n        text: 'Bact Nr-',\n        sortable: true,\n        value: 'bactNr',\n        hide: false\n      }, {\n        property: 3,\n        text: 'Alternative ID',\n        value: 'altId',\n        hide: false\n      }, {\n        property: 3,\n        text: 'priority',\n        value: 'priority',\n        hide: false\n      }, {\n        property: 3,\n        text: 'Pathogen',\n        value: 'abbreviation',\n        hide: false\n      }, {\n        class: 'dataSet',\n        property: 3,\n        text: 'Patient',\n        value: 'lastName',\n        hide: false\n      }, {\n        property: 3,\n        text: 'Geburtsdatum',\n        value: 'birthdate',\n        hide: false\n      }, {\n        property: 3,\n        text: 'Eingang',\n        value: 'entry',\n        sortable: false,\n        hide: false\n      }, {\n        property: 3,\n        text: 'abnahmeDatum',\n        value: 'abnahmeDatum',\n        hide: false\n      }, {\n        property: 3,\n        text: 'Einsender',\n        value: 'einsender',\n        hide: false\n      }, {\n        property: 3,\n        text: 'Station',\n        value: 'station',\n        hide: false\n      }, {\n        property: 3,\n        text: 'Bearbeitung',\n        value: 'bearbeitung',\n        hide: false\n      }, {\n        property: 3,\n        text: 'Material',\n        value: 'material',\n        hide: false\n      }, {\n        property: 3,\n        text: 'NGS-Projekt',\n        value: 'ngsProject',\n        hide: false\n      }, {\n        property: 2,\n        text: 'Datum DNA-Prep',\n        value: 'datumPrep',\n        hide: false\n      }, {\n        property: 2,\n        text: 'DNA-Konz (ng/ul)',\n        value: 'konzentration',\n        hide: false\n      }, {\n        property: 2,\n        text: 'Visum DNA',\n        value: 'visumDna',\n        hide: false\n      }, {\n        property: 0,\n        text: 'Run Nummer',\n        value: 'runNr',\n        hide: false\n      }, {\n        property: 0,\n        text: 'NGS Nummer',\n        value: 'runProbeNr',\n        hide: false\n      }, {\n        property: 0,\n        text: 'Library Typ',\n        value: 'libraryTyp',\n        hide: false\n      }, {\n        property: 0,\n        text: 'Datum Library',\n        value: 'libraryDatum',\n        hide: false\n      }, {\n        property: 0,\n        text: 'Visum Library',\n        value: 'libraryVisum',\n        hide: false\n      }, {\n        property: 0,\n        text: 'Datum Sequenzierung',\n        value: 'seqDatum',\n        hide: false\n      }, {\n        property: 0,\n        text: 'NGS Gerät',\n        value: 'modalität',\n        hide: false\n      }, {\n        property: 0,\n        text: 'Visum Datenqualität',\n        value: 'datenqualVisum',\n        hide: false\n      }, {\n        property: 0,\n        text: 'Information alte Liste',\n        value: 'infOldList',\n        hide: false\n      }, {\n        property: 0,\n        text: 'Public identifier',\n        value: 'publicIdentifier',\n        hide: false\n      }],\n      search: '',\n      tabs: null,\n      patients: [],\n      editedIndex: -1,\n      editedPatient: {\n        bactNr: '',\n        infOldList: '',\n        altId: '',\n        priority: '',\n        abbreviation: '',\n        lastName: '',\n        firstName: '',\n        patName: '',\n        birthdate: '',\n        entry: '',\n        abnahmeDatum: '',\n        einsender: '',\n        station: '',\n        bearbeitung: '',\n        material: '',\n        ngsProject: '',\n        datumPrep: '',\n        konzentration: '',\n        visumDna: '',\n        runNr: '',\n        runProbeNr: '',\n        libraryTyp: '',\n        libraryDatum: '',\n        libraryVisum: '',\n        seqDatum: '',\n        modalität: '',\n        datenqualVisum: '',\n        publicIdentifier: ''\n      },\n      defaultPatient: {\n        bactNr: '',\n        infOldList: '',\n        altId: '',\n        priority: '',\n        abbreviation: '',\n        lastName: '',\n        firstName: '',\n        birthdate: '',\n        entry: '',\n        abnahmeDatum: '',\n        einsender: '',\n        station: '',\n        bearbeitung: '',\n        material: '',\n        ngsProject: '',\n        datumPrep: '',\n        konzentration: '',\n        visumDna: '',\n        runNr: '',\n        runProbeNr: '',\n        libraryTyp: '',\n        libraryDatum: '',\n        libraryVisum: '',\n        seqDatum: '',\n        modalität: '',\n        seqVisum: '',\n        datenqualVisum: '',\n        publicIdentifier: ''\n      }\n    };\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? 'New Item' : 'Edit Item';\n    },\n    pages: function pages() {\n      if (this.pagination.rowsPerPage == null || this.pagination.totalItems == null) return 0;\n      return Math.ceil(this.pagination.totalItems / this.pagination.rowsPerPage);\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.initialize();\n    bus.$on('newPatientCreated', function (data) {\n      _this.editedPatient = data;\n\n      _this.patients.push(_this.editedPatient);\n    });\n    bus.$on('patientHasChanged', function (data) {\n      _this.editedPatient = data;\n    });\n    bus.$on('editedIndex', function (data) {\n      _this.editedIndex = data;\n\n      _this.patients.splice(_this.editedIndex, 1, _this.editedPatient);\n    });\n    bus.$on('searchChanged', function (data) {\n      _this.search = data;\n    });\n    bus.$on('hideHeader', function (data) {\n      _this.headerindex = data;\n      _this.headers[_this.headerindex].hide = !_this.headers[_this.headerindex].hide;\n    });\n  },\n  methods: {\n    initialize: function initialize() {\n      var _this2 = this;\n\n      axios.get(\"http://147.87.118.201:3000/api/TblDnaSeqs?filter={%22include%22:{%22toDnaExtraction%22:[{%22toNgs%22:[{%22toPathogen%22:[{%22toNgs%22:[{%22toProbeEingang%22:[{%22toPatient%22:%22%22}]}]}]}]}]}}\").then(function (res) {\n        console.log(res);\n        var data = res.data;\n\n        for (var i in data) {\n          var dnaSeq = res.data[i];\n          var dnaExtraction = dnaSeq.toDnaExtraction;\n          var ngs = dnaExtraction.toNgs;\n          var pathogen = ngs.toPathogen;\n          var probeEingang = pathogen.toNgs[0].toProbeEingang;\n          var patient = probeEingang.toPatient;\n          _this2.editedPatient = Object.assign({}, dnaSeq, dnaExtraction, ngs, pathogen, probeEingang, patient);\n          console.log(_this2.editedPatient);\n\n          _this2.patients.push(_this2.editedPatient);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    },\n    editItem: function editItem(item) {\n      //ursprünglicher Code der den PatID mitgibt!\n      this.editedIndex = this.patients.indexOf(item);\n      this.editedPatient = Object.assign({}, item);\n      bus.$emit('openFormular', true); // emit the event to the bus\n\n      bus.$emit('editedIndex', this.editedIndex);\n      bus.$emit('editedPatient', this.editedPatient);\n    },\n    deleteItem: function deleteItem(item) {\n      var index = this.patients.indexOf(item);\n      confirm('Are you sure you want to delete this dataset?') && this.patients.splice(index, 1);\n    },\n\n    /*This method grabs all the headers in header[] and checks its property, compares it with\n    the state from the tab (which get provided by the Tableframe) and sets the tableheaders\n    accordingly */\n    renderHeader: function renderHeader() {\n      var _this3 = this;\n\n      return this.headers.filter(function (h) {\n        return h.property >= _this3.state;\n      }).filter(function (h) {\n        return h.hide == false;\n      });\n    },\n    save: function save() {\n      this.snack = true;\n      this.snackColor = 'success';\n      this.snackText = 'Data saved';\n    },\n    cancel: function cancel() {\n      this.snack = true;\n      this.snackColor = 'error';\n      this.snackText = 'Canceled';\n    },\n    open: function open() {\n      this.snack = true;\n      this.snackColor = 'info';\n      this.snackText = 'Dialog opened';\n    },\n    close: function close() {\n      console.log('Dialog closed');\n    }\n  }\n};",{"version":3,"sources":["TableDate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-data-table\n    :headers=\"renderHeader()\"\n    :items=\"patients\"\n    class=\"elevation-1\"\n    item-key=\"bactNr\"\n    :search=\"search\"\n    must-sort\n    v-bind:pagination.sync=\"pagination\"\n\n\n\n  >\n<template slot=\"items\" slot-scope=\"props\">\n   <tr @click=\"props.expanded = !props.expanded\">\n        <!--The v-if statements checks the state for the tabs and sets the information accordingly !-->\n                <td class=\"justify-center layout px-0\" >\n          <v-icon\n            small\n            class=\"mr-2\"\n            @click=\"editItem(props.item)\"\n          >\n            edit\n          </v-icon>\n          <v-icon\n            small\n            @click=\"deleteItem(props.item)\"\n          >\n            delete\n          </v-icon>\n        </td>\n        <td class=\"text-xs-left\" v-if=\"!headers[1].hide\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.bactNr\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          > {{ props.item.bactNr }}\n                      <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.bactNr\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog>\n        </td> \n        <td v-if=\"!headers[2].hide\" class=\"text-xs-center\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.altId\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          >\n          {{ props.item.altId }}\n                      <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.altId\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog>\n          </td>\n        <td v-if=\"!headers[3].hide\" class=\"text-xs-center\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.priority\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          >\n          {{ props.item.priority }}\n                      <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.priority\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog> \n          </td>\n\n        <td v-if=\"!headers[4].hide\" class=\"text-xs-center\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.abbreviation\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          >\n          {{ props.item.abbreviation }}\n                      <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.abbreviation\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog>\n          </td>\n\n        <td v-if=\"!headers[5].hide\" class=\"text-xs-center\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.lastName\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          >\n          {{ props.item.lastName }}\n              <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.lastName\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog>\n          </td>\n        <td v-if=\"!headers[6].hide\" class=\"text-xs-center\">\n        <v-edit-dialog\n            :return-value.sync=\"props.item.birthdate\"\n            lazy\n            @save=\"save\"\n            @cancel=\"cancel\"\n            @open=\"open\"\n            @close=\"close\"\n          >\n          {{ props.item.birthdate }}\n              <v-text-field\n              slot=\"input\"\n              v-model=\"props.item.birthdate\"\n              label=\"Edit\"\n              single-line\n              counter\n            ></v-text-field>\n            </v-edit-dialog>\n          </td>\n        <td v-if=\"!headers[7].hide\" class=\"text-xs-center\">{{ props.item.entry }}</td>\n        <td v-if=\"!headers[8].hide\" class=\"text-xs-center\">{{ props.item.abnahmeDatum }}</td>\n        <td v-if=\"!headers[9].hide\" class=\"text-xs-center\">{{ props.item.einsender }}</td>\n        <td v-if=\"!headers[10].hide\" class=\"text-xs-center\">{{ props.item.station }}</td>\n        <td v-if=\"!headers[11].hide\" class=\"text-xs-center\">{{ props.item.bearbeitung }}</td>\n        <td v-if=\"!headers[12].hide\" class=\"text-xs-center\">{{ props.item.material }}</td>\n        <td v-if=\"!headers[13].hide\" class=\"text-xs-center\">{{ props.item.ngsProject }}</td>\n        <td v-if=\"(state<=2) && (!headers[14].hide)\" class=\"text-xs-center\">{{ props.item.datumPrep }}</td>\n        <td v-if=\"(state<=2) && (!headers[15].hide)\" class=\"text-xs-center\">{{ props.item.konzentration }}</td>\n        <td v-if=\"(state<=2) && (!headers[16].hide)\" class=\"text-xs-center\">{{ props.item.visumDna }}</td>\n        <td v-if=\"(state<=0) && (!headers[17].hide)\" class=\"text-xs-center\">{{ props.item.runNr }}</td>\n        <td v-if=\"(state<=0) && (!headers[18].hide)\" class=\"text-xs-center\">{{ props.item.runProbeNr }}</td>\n        <td v-if=\"(state<=0) && (!headers[19].hide)\" class=\"text-xs-center\">{{ props.item.libraryTyp }}</td>\n        <td v-if=\"(state<=0) && (!headers[20].hide)\" class=\"text-xs-center\">{{ props.item.libraryDatum }}</td>\n        <td v-if=\"(state<=0) && (!headers[21].hide)\" class=\"text-xs-center\">{{ props.item.libraryVisum }}</td>\n        <td v-if=\"(state<=0) && (!headers[22].hide)\" class=\"text-xs-center\">{{ props.item.seqDatum }}</td>\n        <td v-if=\"(state<=0) && (!headers[23].hide)\" class=\"text-xs-center\">{{ props.item.modalität }}</td>\n        <td v-if=\"(state<=0) && (!headers[24].hide)\" class=\"text-xs-center\">{{ props.item.seqVisum }}</td>\n        <td v-if=\"(state<=0) && (!headers[25].hide)\" class=\"text-xs-center\">{{ props.item.datenqualVisum }}</td>\n        <td v-if=\"(state<=0) && (!headers[26].hide)\" class=\"text-xs-center\">{{ props.item.publicIdentifier }}</td>\n\n      </tr>\n      </template>\n      <template slot=\"expand\" slot-scope=\"props\">\n      <v-card class=\"text-xs-center\" flat>\n        <v-card-text  style=\"background-color:grey\"><b>Current BactNr.: </b>{{props.item.bactNr}} <b>| Current NGS Project:</b> {{props.item.ngsProject}}</v-card-text>\n      </v-card>\n    </template>\n  </v-data-table>\n</template>\n\n<script>\nimport {bus} from '../main.js';\nimport axios from 'axios';\n\n  export default {\n    props:{\n      state:Number\n    },\n    data: () => ({\n      bufferresults:\"\",\n      pagination : {'sortBy': 'priority', 'ascending': true, 'rowsPerPage': 10},\n      headerindex:0,\n      headers: [\n        { property: 3, text: ' Actions ', value: '' , sortable:false, hide: false},\n        { class:'dataSet',property: 3, text: 'Bact Nr-', sortable: true, value: 'bactNr', hide: false},\n        { property: 3, text: 'Alternative ID', value: 'altId', hide: false },\n        { property: 3,text: 'priority', value: 'priority' , hide: false},\n        { property: 3,text: 'Pathogen', value: 'abbreviation' , hide: false},\n        { class:'dataSet',property: 3,text: 'Patient', value: 'lastName' , hide: false},\n        { property: 3,text: 'Geburtsdatum', value: 'birthdate', hide: false },\n        { property: 3,text: 'Eingang', value: 'entry', sortable: false, hide: false },\n        { property: 3,text: 'abnahmeDatum', value: 'abnahmeDatum', hide: false },\n        { property: 3,text: 'Einsender', value: 'einsender', hide: false },\n        { property: 3,text: 'Station', value: 'station', hide: false },\n        { property: 3,text: 'Bearbeitung', value: 'bearbeitung', hide: false },\n        { property: 3,text: 'Material', value: 'material', hide: false },\n        { property: 3,text: 'NGS-Projekt', value: 'ngsProject', hide: false },\n        { property: 2,text: 'Datum DNA-Prep', value: 'datumPrep', hide: false },\n        { property: 2,text: 'DNA-Konz (ng/ul)', value: 'konzentration', hide: false },\n        { property: 2,text: 'Visum DNA', value: 'visumDna', hide: false },\n        { property: 0,text: 'Run Nummer', value: 'runNr', hide: false },\n        { property: 0,text: 'NGS Nummer', value: 'runProbeNr', hide: false },\n        { property: 0,text: 'Library Typ', value: 'libraryTyp', hide: false },\n        { property: 0,text: 'Datum Library', value: 'libraryDatum', hide: false },\n        { property: 0,text: 'Visum Library', value: 'libraryVisum', hide: false },\n        { property: 0,text: 'Datum Sequenzierung', value: 'seqDatum', hide: false },\n        { property: 0,text: 'NGS Gerät', value: 'modalität' , hide: false},\n        { property: 0,text: 'Visum Datenqualität', value: 'datenqualVisum' , hide: false},\n        { property: 0,text: 'Information alte Liste', value: 'infOldList' , hide: false},\n        { property: 0,text: 'Public identifier', value: 'publicIdentifier' , hide: false},\n      ],\n      search:'',\n      tabs: null,\n    patients: [],\n      editedIndex: -1,\n      editedPatient: {\n        bactNr: '',\n        infOldList: '',\n        altId: '',\n        priority:'',\n        abbreviation: '',\n        lastName: '',\n        firstName:'',\n        patName: '',\n        birthdate: '',\n        entry: '',\n        abnahmeDatum: '',\n        einsender: '',\n        station: '',\n        bearbeitung: '',\n        material: '',\n        ngsProject: '',\n        datumPrep: '',\n        konzentration: '',\n        visumDna: '',\n        runNr: '',\n        runProbeNr: '',\n        libraryTyp: '',\n        libraryDatum: '',\n        libraryVisum: '',\n        seqDatum: '',\n        modalität: '',\n        datenqualVisum: '',\n        publicIdentifier: '',\n      },\n       defaultPatient: {\n        bactNr: '',\n        infOldList: '',\n        altId: '',\n        priority:'',\n        abbreviation: '',\n        lastName: '',\n        firstName:'',\n        birthdate: '',\n        entry: '',\n        abnahmeDatum: '',\n        einsender: '',\n        station: '',\n        bearbeitung: '',\n        material: '',\n        ngsProject: '',\n        datumPrep: '',\n        konzentration: '',\n        visumDna: '',\n        runNr: '',\n        runProbeNr: '',\n        libraryTyp: '',\n        libraryDatum: '',\n        libraryVisum: '',\n        seqDatum: '',\n        modalität: '',\n        seqVisum:'',\n        datenqualVisum: '',\n        publicIdentifier: '',\n      }\n    }),\n       computed: {\n      formTitle () {\n        return this.editedIndex === -1 ? 'New Item' : 'Edit Item'\n      },\n      pages () {\n        if (this.pagination.rowsPerPage == null ||\n          this.pagination.totalItems == null\n        ) return 0\n\n        return Math.ceil(this.pagination.totalItems / this.pagination.rowsPerPage)\n      }\n    }, \n\n    created () {\n            this.initialize()\n      bus.$on('newPatientCreated', (data) =>{\n      this.editedPatient = data;\n      this.patients.push(this.editedPatient)\n      \n      });\n      bus.$on('patientHasChanged', (data) =>{\n      this.editedPatient = data;\n\n      });\n      bus.$on('editedIndex', (data) =>{\n      this.editedIndex = data;\n      this.patients.splice(this.editedIndex,1,this.editedPatient)\n      });\n      bus.$on('searchChanged', (data) =>{\n      this.search = data;\n      });\n      bus.$on('hideHeader', (data) =>{\n      this.headerindex = data;\n      this.headers[this.headerindex].hide = !this.headers[this.headerindex].hide\n      });\n    },\n\n\n    methods: {\n      initialize () {\n        axios.get(\n        \"http://147.87.118.201:3000/api/TblDnaSeqs?filter={%22include%22:{%22toDnaExtraction%22:[{%22toNgs%22:[{%22toPathogen%22:[{%22toNgs%22:[{%22toProbeEingang%22:[{%22toPatient%22:%22%22}]}]}]}]}]}}\"\n        )\n          .then(res => {\n            console.log(res);\n            const data = res.data; \n           for(let i in data){\n              const dnaSeq = res.data[i];\n              const dnaExtraction = dnaSeq.toDnaExtraction;\n              const ngs = dnaExtraction.toNgs;\n              let pathogen = ngs.toPathogen;\n              let probeEingang = pathogen.toNgs[0].toProbeEingang;\n              let patient = probeEingang.toPatient;\n\n              this.editedPatient = Object.assign({},dnaSeq,dnaExtraction,ngs,pathogen,probeEingang,patient)\n               console.log(this.editedPatient);\n              this.patients.push(this.editedPatient);\n            }\n          })\n          .catch(error => console.log(error))\n      },\n          editItem (item) {\n        //ursprünglicher Code der den PatID mitgibt!\n        this.editedIndex = this.patients.indexOf(item)\n        this.editedPatient = Object.assign({}, item)\n\n        bus.$emit('openFormular', true) // emit the event to the bus\n        bus.$emit('editedIndex', this.editedIndex)\n        bus.$emit('editedPatient',this.editedPatient)\n\n      },\n\n\n      deleteItem (item) {\n        const index = this.patients.indexOf(item)\n        confirm('Are you sure you want to delete this dataset?') && this.patients.splice(index, 1)\n      },\n\n      /*This method grabs all the headers in header[] and checks its property, compares it with\n      the state from the tab (which get provided by the Tableframe) and sets the tableheaders\n      accordingly */\n      renderHeader(){\n        return this.headers.filter(h => (h.property>= this.state)).filter(h => h.hide == false)\n      },\n\n      save () {\n        this.snack = true\n        this.snackColor = 'success'\n        this.snackText = 'Data saved'\n      },\n      cancel () {\n        this.snack = true\n        this.snackColor = 'error'\n        this.snackText = 'Canceled'\n      },\n      open () {\n        this.snack = true\n        this.snackColor = 'info'\n        this.snackText = 'Dialog opened'\n      },\n      close () {\n        console.log('Dialog closed')\n      }\n    }\n  }\n  </script>\n\n<style>\n.dataSet{\n  max-height: 50px;\n  min-width: 130px;\n}\n</style>\n"],"sourceRoot":"src\\components"}]}