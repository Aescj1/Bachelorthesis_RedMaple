{"remainingRequest":"D:\\RedMaple\\Frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\RedMaple\\Frontend\\node_modules\\vuetify-loader\\lib\\loader.js!D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\RedMaple\\Frontend\\src\\components\\TableFrame.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\RedMaple\\Frontend\\src\\components\\TableFrame.vue","mtime":1543935395000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1541050042000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\RedMaple\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { bus } from '../main.js';\nexport default {\n  props: ['state'],\n  name: 'TableFrame',\n\n  /*dialog: false,*/\n  components: {},\n  data: function data() {\n    return {\n      dialog: false,\n      tab: null,\n      search: '',\n      dark: true,\n      items: ['Sequenziert', 'Lauf vorbereiten', 'DNA zum Auffüllen', 'Geplant']\n    };\n  },\n  methods: {\n    setTab: function setTab(index) {\n      this.state = index;\n      this.$emit('tabStateWasChanged', this.state);\n    },\n    openMyDialog: function openMyDialog() {\n      bus.$emit('openFormular', true); // emit the event to the bus\n    },\n    searchIt: function searchIt() {\n      bus.$emit('searchChanged', this.search);\n    }\n  }\n  /*\n  watch:{\n  search: function(){\n      bus.$emit('searchChanged', this.search)\n    \n  }\n  },*/\n\n};",{"version":3,"sources":["TableFrame.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAA,GAAA,QAAA,YAAA;AAGA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,OAAA,CADA;AAEA,EAAA,IAAA,EAAA,YAFA;;AAGA;AAEA,EAAA,UAAA,EAAA,EALA;AAOA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,GAAA,EAAA,IAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,IAAA,EAAA,IAJA;AAKA,MAAA,KAAA,EAAA,CACA,aADA,EACA,kBADA,EACA,mBADA,EACA,SADA;AALA,KAAA;AAAA,GAPA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,KADA,EACA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,oBAAA,EAAA,KAAA,KAAA;AACA,KAJA;AAKA,IAAA,YALA,0BAKA;AACA,MAAA,GAAA,CAAA,KAAA,CAAA,cAAA,EAAA,IAAA,EADA,CACA;AACA,KAPA;AAQA,IAAA,QARA,sBAQA;AACA,MAAA,GAAA,CAAA,KAAA,CAAA,eAAA,EAAA,KAAA,MAAA;AACA;AAVA;AAYA;;;;;;;;AA7BA,CAAA","sourcesContent":["<template>\n  <div class=\"tableView\">\n    <v-toolbar \n      flat \n      color=\"#a3a5a8\"\n      tabs\n    >\n      <v-tabs\n      color=\"#a3a5a8\"\n      slider-color=\"red\"\n      @change=\"setTab\"\n\n      >\n        <v-tab \n        v-for=\"item in items\" \n        :key=\"item\"\n        >\n        {{item}}\n        </v-tab>\n      </v-tabs>\n      <v-text-field style=\"width:70%\" v-model=\"search\" @input=\"searchIt()\" append-icon=\"search\" label=\"Search\" single-line></v-text-field>\n          <v-spacer></v-spacer>\n\n      <v-btn @click=\"openMyDialog()\">New Dataset</v-btn>\n    </v-toolbar>\n      <v-tab>\n    <v-tab-item>\n      </v-tab-item>\n        </v-tab>\n  </div>\n</template>\n\n<script>\nimport {bus} from '../main.js'\n\n\n  export default {\n  props:['state'],\n  name: 'TableFrame',\n  /*dialog: false,*/\n\n  components: {\n  },\n    data: () => ({\n     dialog: false,\n      tab: null,\n      search:'',\n      dark:true,\n      items:[\n        'Sequenziert','Lauf vorbereiten','DNA zum Auffüllen','Geplant'\n      ],\n      \n    }),\n    methods:{\n      setTab(index){\n        this.state = index;\n        this.$emit('tabStateWasChanged',this.state);\n      },\n      openMyDialog () {\n        bus.$emit('openFormular', true) // emit the event to the bus\n      },\n      searchIt(){\n        bus.$emit('searchChanged', this.search)\n      }\n\n    },/*\n    watch:{\n      search: function(){\n          bus.$emit('searchChanged', this.search)\n        \n      }\n    },*/\n   \n  }\n\n</script>\n\n  <style>\n  .table{\noverflow:auto;\n}\n  </style>"],"sourceRoot":"src\\components"}]}